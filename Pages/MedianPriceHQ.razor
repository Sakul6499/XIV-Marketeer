@page "/median_price_hq"
@using System.Net.Http; // for HttpClient
@using System.Net.Http.Json; // for HttpClientJsonExtensions

<PageTitle>Median Price (HQ)</PageTitle>

<h1>Median Price (HQ)</h1>

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Item ID</th>
                <th>Item Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <p>Cake</p>
                    @* <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td> *@
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Item[]? items;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Cake");
        var client = new HttpClient();
        foreach (var item in client.DefaultRequestHeaders)
        {
            Console.WriteLine(item);
        }

        var URL =
        "https://jenkins.sakul6499.de/job/GitHub%20XIV-Marketeer/job/Jupyter/job/master/lastSuccessfulBuild/artifact/data/item_names.json";
        string responseBody = await client.GetStringAsync(URL);
        Console.WriteLine(responseBody);
    }

    public class Item
    {
        public String Name { get; }
        public int ItemID { get; }
        public String Category { get; }
        public int CategoryID { get; }
        public String AveragePriceNQ { get; }
        public String AveragePriceHQ { get; }
        public String MedianPriceNQ { get; }
        public String MedianPriceHQ { get; }
        public String RegularSaleVelocity { get; }
        public String NQSaleVelocity { get; }
        public String HQSaleVelocity { get; }
        public String GarlandToolsURL { get; }
        public String UniversalisURL { get; }

        public Item(String name, int itemID, String category, int categoryID, String averagePriceNQ, String averagePriceHQ,
        String medianPriceNQ, String medianPriceHQ, String regularSaleVelocity, String nqSaleVelocity, String hqSaleVelocity,
        String garlandToolsURL, String universalisURL)
        {
            Name = name;
            ItemID = itemID;
            Category = category;
            CategoryID = categoryID;
            AveragePriceNQ = averagePriceNQ;
            AveragePriceHQ = averagePriceHQ;
            MedianPriceNQ = medianPriceNQ;
            MedianPriceHQ = medianPriceHQ;
            RegularSaleVelocity = regularSaleVelocity;
            NQSaleVelocity = nqSaleVelocity;
            HQSaleVelocity = hqSaleVelocity;
            GarlandToolsURL = garlandToolsURL;
            UniversalisURL = universalisURL;
        }
    }
}
